ssh banditX@bandit.labs.overthewire.org

Bandit
The Bandit wargame is aimed at absolute beginners. 
It will teach the basics needed to be able to play other wargames. 
If you notice something essential is missing or have ideas for new levels, 
please let us know!

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 0

- Level Goal:
--- The goal of this level is for you to log into the game using SSH. 
--- The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. 
--- The username is bandit0 and the password is bandit0.
--- Once logged in, go to the Level 1 page to find out how to beat Level 1.

- Commands: ssh
- Steps: logged in with ssh bandit0@bandit.labs.overthewire.org -p 2220
- Password Found: N/A

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 0 → Level 1

- Level Goal: 
--- The password for the next level is stored in a file 
--- called readme located in the home directory. 
--- Use this password to log into bandit1 using SSH. 
--- Whenever you find a password for a level, use SSH (on port 2220) to 
--- log into that level and continue the game.

- Commands: ls , cd , cat , file , du , find
- Steps: 
- Password Found: NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 1 → Level 2

- Level Goal: 
--- The password for the next level is stored in a file 
--- called - located in the home directory

- Commands: ls , cd , cat , file , du , find
- Steps: cd ./{filename}
- Password Found: rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 2 → Level 3

- Level Goal: 
--- The password for the next level is stored in a file 
--- called spaces in this filename located in the home directory

- Commands: ls , cd , cat , file , du , find
- Steps: 
- Password Found: aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 3 → Level 4

- Level Goal: 
--- The password for the next level is stored in a hidden file
--- in the inhere directory.

- Commands: ls , cd , cat , file , du , find
- Steps: 
- Password Found: 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 4 → Level 5

- Level Goal: 
--- The password for the next level is stored in the only 
--- human-readable file in the inhere directory. 
--- Tip: if your terminal is messed up, try the “reset” command.

- Commands: ls , cd , cat , file , du , find
- Steps: 
- Password Found: lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 5 → Level 6

- Level Goal: 
--- The password for the next level is stored in a file 
--- somewhere under the inhere directory and has all of 
--- the following properties:
------ human-readable
------ 1033 bytes in size
------ not executable

- Commands: ls , cd , cat , file , du , find
- Steps: 
- Password Found: P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 6 → Level 7

- Level Goal: 
--- The password for the next level is stored somewhere on the 
--- server and has all of the following properties:
------ owned by user bandit7
------ owned by group bandit6
------ 33 bytes in size

- Commands: ls , cd , cat , file , du , find , grep
- Steps: find . -user bandit7 -group bandit6
- Password Found: z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 7 → Level 8

- Level Goal: 
--- The password for the next level is stored in the file
--- data.txt next to the word millionth

- Commands: man, grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
- Steps: 
- Password Found: TESKZC0XvTetK0S9xNwm25STk5iWrBvP

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 8 → Level 9

- Level Goal: 
--- The password for the next level is stored in the file
--- data.txt and is the only line of text that occurs only once

- Commands: grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
- Steps: sort data.txt | uniq -u
- Password Found: EN632PlfYiZbn3PhVK3XOGSlNInNE00t

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 9 → Level 10

- Level Goal: 
--- The password for the next level is stored in the file 
--- data.txt in one of the few human-readable strings, 
--- preceded by several ‘=’ characters.

- Commands: grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
- Steps: strings data.txt
- Password Found: G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 10 → Level 11

- Level Goal: 
--- The password for the next level is stored in the file 
--- data.txt, which contains base64 encoded data

- Commands: grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
- Steps: base64 -d data.txt
- Password Found: 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 11 → Level 12

- Level Goal: 
--- The password for the next level is stored in the file 
--- data.txt, where all lowercase (a-z) and uppercase (A-Z) 
--- letters have been rotated by 13 positions

- Commands: grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
- Steps: tr 'A-Za-z' 'N-ZA-Mn-za-m' < data.txt (ROT13)
- Password Found: JVNBBFSmZwKKOP0XbFXOoW8chDz5yVRv

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 12 → Level 13

- Level Goal: 
--- The password for the next level is stored in the file
--- data.txt, which is a hexdump of a file that has been repeatedly compressed. 
--- For this level it may be useful to create a directory under /tmp
--- in which you can work using mkdir. For example: mkdir /tmp/myname123. 
--- Then copy the datafile using cp, and rename it using mv (read the manpages!)

- Commands: grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd, mkdir, cp, mv, file
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 13 → Level 14

- Level Goal: 
--- The password for the next level is stored in /etc/bandit_pass/bandit14 
--- and can only be read by user bandit14. For this level, you don’t get the next password, 
--- but you get a private SSH key that can be used to log into the next level. 

--- Note: localhost is a hostname that refers to the machine you are working on

- Commands: ssh, telnet, nc, openssl, s_client, nmap
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 14 → Level 15

- Level Goal: 
--- The password for the next level can be retrieved by submitting 
--- the password of the current level to port 30000 on localhost.

- Commands: ssh, telnet, nc, openssl, s_client, nmap
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 15 → Level 16

- Level Goal: 
--- The password for the next level can be retrieved by submitting 
--- the password of the current level to port 30001 on localhost using SSL encryption.

--- Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and 
--- read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, 
--- the ‘B’ command also works in this version of that command…

- Commands: ssh, telnet, nc, openssl, s_client, nmap
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 16 → Level 17

- Level Goal: 
--- The credentials for the next level can be retrieved by submitting 
--- the password of the current level to a port on localhost in the range 31000 to 32000. 
--- First find out which of these ports have a server listening on them. 
--- Then find out which of those speak SSL and which don’t. 
--- There is only 1 server that will give the next credentials, 
--- the others will simply send back to you whatever you send to it.

- Commands: ssh, telnet, nc, openssl, s_client, nmap
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 17 → Level 18

- Level Goal: 
--- There are 2 files in the homedirectory: passwords.old and passwords.new. 
--- The password for the next level is in passwords.new and is the only 
--- line that has been changed between passwords.old and passwords.new

--- NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, 
--- this is related to the next level, bandit19

- Commands: cat, grep, ls, diff
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 18 → Level 19

- Level Goal: 
--- The password for the next level is stored in a file readme in the homedirectory. 
--- Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.

- Commands: ssh, ls, cat
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 19 → Level 20

- Level Goal: 
--- To gain access to the next level, you should use the setuid binary in the homedirectory. 
--- Execute it without arguments to find out how to use it. 
--- The password for this level can be found in the usual place (/etc/bandit_pass),
--- after you have used the setuid binary.

- Commands: 
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 20 → Level 21

- Level Goal: 
--- There is a setuid binary in the homedirectory that does the following: 
--- it makes a connection to localhost on the port you specify as a commandline argument. 
--- It then reads a line of text from the connection and compares it to the password in
--- the previous level (bandit20). 
--- If the password is correct, it will transmit the password for the next level (bandit21).

--- NOTE: Try connecting to your own network daemon to see if it works as you think

- Commands: ssh, nc, cat, bash, screen, tmux, Unix ‘job control’ (bg, fg, jobs, &, CTRL-Z, …)
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 21 → Level 22

- Level Goal: 
--- A program is running automatically at regular intervals from cron,
--- the time-based job scheduler. 
--- Look in /etc/cron.d/ for the configuration and see what command is being executed.

- Commands: cron, crontab, crontab(5) (use “man 5 crontab” to access this)
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 22 → Level 23

- Level Goal: 
--- A program is running automatically at regular intervals from cron, 
--- the time-based job scheduler. Look in /etc/cron.d/ for the configuration 
--- and see what command is being executed.

--- NOTE: Looking at shell scripts written by other people is a very useful skill. 
--- The script for this level is intentionally made easy to read. 
--- If you are having problems understanding what it does, try executing it 
--- to see the debug information it prints.

- Commands: cron, crontab, crontab(5) (use “man 5 crontab” to access this)
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 23 → Level 24

- Level Goal: 
--- A program is running automatically at regular intervals from cron, 
--- the time-based job scheduler. Look in /etc/cron.d/ for the configuration 
--- and see what command is being executed.

--- NOTE: This level requires you to create your own first shell-script. 
--- This is a very big step and you should be proud of yourself when you beat this level!

--- NOTE 2: Keep in mind that your shell script is removed once executed, 
--- so you may want to keep a copy around…

- Commands: cron, crontab, crontab(5) (use “man 5 crontab” to access this)
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 24 → Level 25

- Level Goal: 
--- A daemon is listening on port 30002 and will give you the password 
--- for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode.
--- There is no way to retrieve the pincode except by going through all 
--- of the 10000 combinations, called brute-forcing.
--- You do not need to create new connections each time

- Commands: 
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 25 → Level 26

- Level Goal: 
--- Logging in to bandit26 from bandit25 should be fairly easy… 
--- The shell for user bandit26 is not /bin/bash, but something else. 
--- Find out what it is, how it works and how to break out of it.

- Commands: ssh, cat, more, vi, ls, id, pwd
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 26 → Level 27

- Level Goal: 
--- Good job getting a shell! Now hurry and grab the password for bandit27!

- Commands: ls
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 27 → Level 28

- Level Goal: 
--- There is a git repository at 
--- ssh://bandit27-git@localhost/home/bandit27-git/repo. 
--- The password for the user bandit27-git is the same as 
--- for the user bandit27.

--- Clone the repository and find the password for the next level.

- Commands: git
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 28 → Level 29

- Level Goal: 
--- There is a git repository at
--- ssh://bandit28-git@localhost/home/bandit28-git/repo.
--- The password for the user bandit28-git is the same as 
--- for the user bandit28.

--- Clone the repository and find the password for the next level.

- Commands: git
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 29 → Level 30

- Level Goal: 
--- There is a git repository at 
--- ssh://bandit29-git@localhost/home/bandit29-git/repo. 
--- The password for the user bandit29-git is the same as 
--- for the user bandit29.

--- Clone the repository and find the password for the next level.

- Commands: git
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 30 → Level 31

- Level Goal: 
--- There is a git repository at 
--- ssh://bandit30-git@localhost/home/bandit30-git/repo. 
--- The password for the user bandit30-git is the same as 
--- for the user bandit30.

--- Clone the repository and find the password for the next level.

- Commands: git
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 31 → Level 32

- Level Goal: 
--- There is a git repository at 
--- ssh://bandit31-git@localhost/home/bandit31-git/repo. 
--- The password for the user bandit31-git is the same as 
--- for the user bandit31.

--- Clone the repository and find the password for the next level.

- Commands: git
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 32 → Level 33

- Level Goal: 
--- After all this git stuff its time for another escape. Good luck!

- Commands: sh, man
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Level 33 → Level 34

- Level Goal: 
--- At this moment, level 34 does not exist yet.

- Commands: 
- Steps: 
- Password Found: 

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

